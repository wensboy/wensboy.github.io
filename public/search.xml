<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Arch linux 详细安装</title>
    <url>/2024/11/16/arch-install/</url>
    <content><![CDATA[<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><p>The purpose of this article is to provide a comprehensive installation guide to archlinux in a format that is more accessible to you. note that this requires you to already have some knowledge of operating systems. This article summarizes the steps on the arch wiki, and is not intended to be used by everyone.</p>
<p><strong>hardware requirement</strong></p>
<blockquote>
<p>CPU architecture: x86_64<br>minimun of RAM: 512GiB<br>minimun of disk space: 2GiB<br>network interface: available</p>
</blockquote>
<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="Acquire-an-installation-image"><a href="#Acquire-an-installation-image" class="headerlink" title="Acquire an installation image"></a>Acquire an installation image</h3><p>Visit the arch website, look for the desired system version, download the corresponding iso system file, and use gnupg to verify the signature of the downloaded file.</p>
<h3 id="Verify-signature"><a href="#Verify-signature" class="headerlink" title="Verify signature"></a>Verify signature</h3><p>It is recommended to verify the signature of the iso file before using it,especially when downloading from an HTTP mirror.</p>
<p>After downloading the iso file, in order to verify the signature, you need to first download the corresponding iso signature.</p>
<p><strong>Use gnupg to run the following command:</strong></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig</span><br></pre></td></tr></table></figure></div>

<p><strong>Alternatively, from an existing Arch Linux installation run:</strong></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">pacman-key -v archlinux-version-x86_64.iso.sig</span><br></pre></td></tr></table></figure></div>

<h3 id="Prepare-an-installation-medium"><a href="#Prepare-an-installation-medium" class="headerlink" title="Prepare an installation medium"></a>Prepare an installation medium</h3><p>Prepare a large enough storage (size larger than the system iso file can be) of mobile devices, such as: USB flash drive, portable hard disk, etc.. With the help of tools such as ventoy, make the mobile device into a system boot disk.</p>
<h3 id="Boot-the-live-environment"><a href="#Boot-the-live-environment" class="headerlink" title="Boot the live environment"></a>Boot the live environment</h3><p><strong>Note: Arch Linux installation images do not support Secure Boot.But secure boot can be set up after completing the installation.</strong> </p>
<p>1、Insert the USB flash drive with the arch system iso file to the physical device, power on the physical device.</p>
<p>2、When the installation medium’s boot loader menu appears:</p>
<p><strong>if you used the ISO, select <em>Arch Linux install medium</em> and press Enter to enter the installation environment.</strong><br><strong>if you used the Netboot image, choose a geographically close mirror from Mirror menu, then select <em>Boot Arch Linux</em> and press Enter.</strong></p>
<h3 id="Set-the-console-keyboard-layout-and-font"><a href="#Set-the-console-keyboard-layout-and-font" class="headerlink" title="Set the console keyboard layout and font"></a>Set the console keyboard layout and font</h3><p><strong>The default keyboard layout is US.</strong></p>
<p>list all available layout and set the keyboard layout:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">localectl list-keymaps</span><br><span class="line">loadkeys &lt;keyboard-layout&gt;</span><br></pre></td></tr></table></figure></div>

<p><strong>console fonts are located in &#x2F;usr&#x2F;share&#x2F;kbd&#x2F;consolefonts&#x2F;</strong></p>
<p>set console fonts:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">setfont &lt;font-name&gt;</span><br></pre></td></tr></table></figure></div>

<h3 id="Verify-the-boot-mode"><a href="#Verify-the-boot-mode" class="headerlink" title="Verify the boot mode"></a>Verify the boot mode</h3><p>just run:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cat /sys/firmware/efi/fw_platform_size</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">64 --&gt;UEFI mode and has a 64-bit x64 UEFI</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">32 --&gt;UEFI mode and has a 32-bit IA32 UEFI</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file not exist --&gt;BIOS</span></span><br></pre></td></tr></table></figure></div>

<h3 id="Connect-to-the-internet"><a href="#Connect-to-the-internet" class="headerlink" title="Connect to the internet"></a>Connect to the internet</h3><p><strong>Note:Ensure your Network interface is available.</strong></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ip link</span><br></pre></td></tr></table></figure></div>

<p>connect the network:</p>
<ul>
<li>Ethernet–plug in the cable</li>
<li>Wi-Fi–with tools like <strong>iwctl</strong> or <strong>networkmanager</strong></li>
<li>Mobile broadband modem–connect to the mobile network with the <strong>mmcli</strong> utility</li>
</ul>
<p>using iwctl to connect network,for example:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S iwd</span><br><span class="line">systemctl enable iwd.service</span><br><span class="line">systemctl start iwd.service</span><br></pre></td></tr></table></figure></div>

<p>usage:</p>
<p><strong>Note: network name should be double quoted when connecting</strong></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">iwctl</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Enter the iwctl environment</span></span><br><span class="line"><span class="meta prompt_">[iwd]# </span><span class="language-bash">...</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">list all available commands</span></span><br><span class="line">:help</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">list all Wi-Fi devices</span></span><br><span class="line">device list</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">turn on corresponding adapter</span></span><br><span class="line">device &lt;name&gt; set-property Powered on</span><br><span class="line">adapter &lt;adapter&gt; set-property Powered on</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scan availabel neowork nearly</span></span><br><span class="line">station &lt;name&gt; scan</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">list all available neowork</span></span><br><span class="line">station &lt;name&gt; get-networks</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">connect the network</span></span><br><span class="line">station &lt;name&gt; connect SSID</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">connect with passphrase</span></span><br><span class="line">iwctl --passphrase passphrase station name connect SSID</span><br></pre></td></tr></table></figure></div>

<p>test network connection：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ping archlinux.org</span><br></pre></td></tr></table></figure></div>

<h3 id="Update-the-system-clock"><a href="#Update-the-system-clock" class="headerlink" title="Update the system clock"></a>Update the system clock</h3><p>In the live environment <strong>systemd-timesyncd</strong> is enabled by default and time will be synced automatically once a connection to the internet is established. </p>
<p>ensure the system clock is synchronized:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure></div>

<h3 id="Partition-the-disks"><a href="#Partition-the-disks" class="headerlink" title="Partition the disks"></a>Partition the disks</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">list available disk devices</span></span><br><span class="line">fdisk -l</span><br><span class="line">lsblk -f</span><br></pre></td></tr></table></figure></div>

<p>For the selected partitioned disk device, the following partitions are required：<br>1、root directory –&gt;&#x2F;<br>2、EFI system partition –&gt;&#x2F;boot</p>
<p>using fdisk to modify partition tables:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk /dev/the_disk_to_be_partitioned</span><br></pre></td></tr></table></figure></div>

<p><strong>Note:Take time to plan a long-term partitioning scheme to avoid risky and complicated conversion or re-partitioning procedures in the future.</strong></p>
<p>example layout:</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/linux/arch-install/UEFI-partition.png"
                      alt="UEFI-partition"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/linux/arch-install/BIOS-partiton.png"
                      alt="BIOS-partition"
                ></p>
<p>#Format the partitions</p>
<p><strong>Each partition needs to be properly formatted as a file system.</strong></p>
<p>some format example:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">common partition</span></span><br><span class="line">mkfs.ext4 /dev/root_partition</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">swap partition</span></span><br><span class="line">mkswap /dev/swap_partition</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">efi partition</span></span><br><span class="line">mkfs.fat -F 32 /dev/efi_system_partition</span><br></pre></td></tr></table></figure></div>

<h3 id="Mount-the-file-systems"><a href="#Mount-the-file-systems" class="headerlink" title="Mount the file systems"></a>Mount the file systems</h3><p><strong>Note:All formatted filesystems should be mounted on &#x2F;mnt.You must mount the root partition before mounting any other partitions.</strong></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">root --&gt; /mnt</span></span><br><span class="line">mount /dev/root_partition /mnt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">boot --&gt; /mnt/boot</span></span><br><span class="line">mout --mkdir /dev/efi_system_partition /mnt/boot</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">swap</span></span><br><span class="line">swapon /dev/swap_partition</span><br></pre></td></tr></table></figure></div>

<h3 id="Installation-of-Arch"><a href="#Installation-of-Arch" class="headerlink" title="Installation of Arch"></a>Installation of Arch</h3><p><strong>select the mirrors</strong></p>
<p><strong>Note:Mirroring prioritizes the mirrors at the top of the file list, scanning the list of mirrors from top to bottom.Choose an appropriate mirror (modification of the corresponding file is necessary).</strong></p>
<p>The list of mirrors is located in <code>/etc/pacman.d/mirrorlist</code></p>
<p><strong>install essential packages</strong></p>
<p><strong>Note:All software and configuration files installed in the live environment will not appear in the new system after installation.</strong></p>
<p>Installation of basic packages and firmware programs and kernels：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">pacstrap -K /mnt base linux linux-firmware [vim] [amd/intel ucode] []</span><br></pre></td></tr></table></figure></div>

<p><strong>Note:If there are any remaining packages that you want to install during the installation of the system, you can add them directly to pacstrap.</strong></p>
<p>——<em>At this point, the arch basic installation phase is complete.</em>——</p>
<h3 id="Configure-the-system"><a href="#Configure-the-system" class="headerlink" title="Configure the system"></a>Configure the system</h3><h4 id="fstab"><a href="#fstab" class="headerlink" title="fstab"></a>fstab</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure></div>

<p><strong>Note:If an error occurs, change the corresponding file manually.</strong></p>
<h4 id="chroot"><a href="#chroot" class="headerlink" title="chroot"></a>chroot</h4><p>Exit the live environment and enter the new system:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure></div>

<h4 id="time"><a href="#time" class="headerlink" title="time"></a>time</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Region/&lt;City&gt; /etc/localtime</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">generate /etc/adjtime</span></span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure></div>

<h4 id="localization"><a href="#localization" class="headerlink" title="localization"></a>localization</h4><p>Edit <code>/etc/locale.gen</code> and uncomment en_US.UTF-8 UTF-8 and other needed UTF-8 locales.</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">locale-gen</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">set</span> lang</span></span><br><span class="line">vim /etc/locale.conf</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">set</span> keymaps</span></span><br><span class="line">vim /etc/vconsole.conf</span><br><span class="line">KEYMAP=&lt;layout&gt;</span><br></pre></td></tr></table></figure></div>

<h4 id="network-configuration"><a href="#network-configuration" class="headerlink" title="network configuration"></a>network configuration</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hostname</span><br><span class="line">&lt;hostname&gt;</span><br></pre></td></tr></table></figure></div>

<p><strong>Note:Within my other article, this section is covered in detail, just look for the jump to view it!</strong></p>
<h4 id="Initramfs"><a href="#Initramfs" class="headerlink" title="Initramfs"></a>Initramfs</h4><p><strong>Note:Since it’s not required, just check the official website for details.</strong></p>
<h4 id="root-password"><a href="#root-password" class="headerlink" title="root password"></a>root password</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure></div>

<h4 id="Bootloader"><a href="#Bootloader" class="headerlink" title="Bootloader"></a>Bootloader</h4><p><strong>Note:Within my other article, this section is covered in detail, just look for the jump to view it!</strong></p>
<h4 id="reboot"><a href="#reboot" class="headerlink" title="reboot"></a>reboot</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></div>

<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p><strong>There are many more details and precautions in the installation of arch. And, installation is not the most difficult arch, relatively, maintenance arch is always much more difficult than installing arch, it is because arch maintenance is difficult, often due to some irresistible factors, we need to re-install the arch system. Seek more later use and maintenance is decisive.</strong></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a class="link"   href="https://wiki.archlinux.org/title/Installation_guide" >Arch installation guide <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://www.wensboy.site/2024/11/15/linux-boot-config/" >Arch boot loader <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://www.wensboy.site/2024/10/29/linux-network-config/" >Arch network <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>linux</category>
        <category>distro</category>
      </categories>
      <tags>
        <tag>arch</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>C++篇-STL</title>
    <url>/2024/11/25/cplusplus-STL/</url>
    <content><![CDATA[<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><p>When it comes to data structures and algorithms,<strong>C++’s standard template</strong> library can greatly help you speed up your efficiency. However, the standard template library is a very large library, which contains many encapsulated <strong>data structure</strong> templates and <strong>algorithm implementations</strong>, so it is actually a bit difficult to memorize completely, and it is almost difficult to implement, which may be an NP problem. Yes, it seems as if our memories are always limited. Therefore, a good memory is not as good as the memory of a pen, and recording this learning process is also a process of continuous memory.</p>
<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="About-STL"><a href="#About-STL" class="headerlink" title="About STL"></a>About STL</h3><p><strong>Something about C++ stl</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/cplusplus/feature.png"
                      alt="feature of STL"
                ></p>
<p><strong>STL encompasses the following core concepts</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/cplusplus/about_stl.png"
                      alt="contain of STL"
                ></p>
<blockquote>
<p>Imitation functions<br>Algorithm<br>Iterator<br>Space Configurator<br>Containers<br>Adapters</p>
</blockquote>
<p>Learning priorities are given here:</p>
<ul>
<li><input disabled="" type="checkbox"> Containers</li>
<li><input disabled="" type="checkbox"> Algorithm</li>
<li><input disabled="" type="checkbox"> Iterator</li>
<li><input disabled="" type="checkbox"> Adapters</li>
<li><input disabled="" type="checkbox"> Space Configurator</li>
<li><input disabled="" type="checkbox"> Imitation functions</li>
</ul>

  <div class="note p-4 mb-4 rounded-small info yellow">
    <p>note that this does not necessarily apply to all developers who are learning advanced features of C++. It’s a good habit to study selectively according to your needs.</p>

  </div>

<h3 id="Containers"><a href="#Containers" class="headerlink" title="Containers"></a>Containers</h3><p><strong>collection of data structures</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/cplusplus/containers.jpg"
                      alt="containers"
                ></p>
<p>Before starting learning containers, you need to add some pre-knowledge such as the use of std::pair, and at the same time, it will also add some extended knowledge in the continuous recording process.</p>

  <div class="note p-4 mb-4 rounded-small info green">
    <p>std::pair</p>

  </div>

<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T1</span>,<span class="keyword">class</span> <span class="title class_">T2</span>&gt; <span class="keyword">struct</span> <span class="title class_">pair</span>&#123;&#125;</span><br><span class="line">first_type --&gt; T1</span><br><span class="line">second_type --&gt; T2</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; first_pair = &#123;<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">first_pair.first --&gt; 1</span></span><br><span class="line"><span class="comment">first_pair.second --&gt; 2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*functions*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//std::make_pair()</span></span><br><span class="line"><span class="keyword">auto</span> p = std::<span class="built_in">make_pair</span>(T1,T2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//std::swap()</span></span><br><span class="line"><span class="keyword">auto</span> p1 = std::<span class="built_in">make_pair</span>(<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">auto</span> p2 = std::<span class="built_in">pair</span>(<span class="number">20</span>,<span class="number">9.9</span>);</span><br><span class="line"></span><br><span class="line">p<span class="number">1.</span><span class="built_in">swap</span>(p2);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p1--&gt;&#123;20,9.9&#125;</span></span><br><span class="line"><span class="comment">p2--&gt;&#123;10,10&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">std::<span class="built_in">swap</span>(p1,p2);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p1--&gt;&#123;10,10&#125;</span></span><br><span class="line"><span class="comment">p2--&gt;&#123;20,9.9&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//std::get(std:pair)</span></span><br><span class="line"><span class="keyword">auto</span> p =std::<span class="built_in">make_pair</span>(<span class="number">9</span>,<span class="number">3.14</span>);</span><br><span class="line">std::<span class="built_in">get</span>&lt;<span class="number">0</span>&gt;(p);</span><br><span class="line">std::<span class="built_in">get</span>&lt;<span class="number">1</span>&gt;(p);</span><br><span class="line">std::<span class="built_in">get</span>&lt;<span class="type">int</span>&gt;(p);</span><br><span class="line">std::<span class="built_in">get</span>&lt;<span class="type">double</span>&gt;(p);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0 --&gt; first</span></span><br><span class="line"><span class="comment">1 --&gt; second</span></span><br><span class="line"><span class="comment">int --&gt; int_type</span></span><br><span class="line"><span class="comment">double --&gt; double_type</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//logic operators</span></span><br><span class="line">from <span class="number">0</span> --&gt; <span class="number">1</span> to compare:</span><br><span class="line"><span class="keyword">auto</span> p1,p2;</span><br><span class="line"><span class="keyword">if</span> p1&gt;p2 :</span><br><span class="line">    print std::<span class="built_in">get</span>&lt;<span class="number">0</span>&gt;(p1)&gt;std::<span class="built_in">get</span>&lt;<span class="number">0</span>&gt;(p2) <span class="keyword">and</span> std::<span class="built_in">get</span>&lt;<span class="number">1</span>&gt;(p1)&gt;std::<span class="built_in">get</span>&lt;<span class="number">1</span>&gt;(p2); </span><br></pre></td></tr></table></figure></div>

<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>数据结构与算法</tag>
        <tag>语言特性</tag>
      </tags>
  </entry>
  <entry>
    <title>关于搭建个人博客</title>
    <url>/2024/10/17/create-blog/</url>
    <content><![CDATA[
  <div class="note p-4 mb-4 rounded-small info">
    <p>提示:这不是一篇详细教程，仅提供搭建思路。</p>

  </div>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近几天一直在捣鼓搭建个人博客。起初搭建的理由是针对于linux无法科学上网导致很多东西无法查阅资料，遇到问题需要频繁从网上获取解决方案。<br>于是乎便想着搭建个人博客，在记录一些解决方案的同时，将有用的、重要的信息记录下来。</p>
<h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h3><p>首先，搭建个人博客，需要思考一个问题：<br><strong>我们需要什么？或者说：我们需要准备什么？</strong></p>
<p>简单来想，需要：</p>
<blockquote>
<p>一个网站：充当博客网站<br>一个仓库：存放网站的文章等资源<br>一个编辑器：写博客、文章</p>
</blockquote>
<p>现在想复杂一点，需要：</p>
<blockquote>
<p>一个标识：指向博客网站<br>一种通讯方式：编辑器与仓库，仓库与网站</p>
</blockquote>
<p>现在我们需要专业一点了，需要：</p>
<blockquote>
<p>静态网站：博客网站<br>域名：<a class="link"   href="http://www.xxx.xxx指向静态网站/" >www.xxx.xxx指向静态网站 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>vercel：部署静态网站<br>github：代码仓库<br>vscode：编辑器<br>hexo：博客框架，快速搭建同时美化</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small red icon-padding">
    <i class="note-icon fa-solid fa-question"></i><p>比对一下，发现了什么不同吗？</p>

  </div>

<p>我们缺少了通讯方式，但其实并没有，至少在仓库与网站方面，vercel帮我们实现了持续部署，这是根据github上对应的仓库变换来完成的。现在，我们只需要考虑<strong>编辑器</strong>与<strong>仓库</strong>之间如何交流了，这很有意思，因为如果经常使用github，那你对git一定不陌生。是的，git仿佛总是必须的。随着我们的博客越来越大，存放在自己电脑上仿佛总是不安全的。</p>
<h3 id="realization-idea"><a href="#realization-idea" class="headerlink" title="realization idea"></a>realization idea</h3><blockquote>
<p>注册github,创建名为username.github.io的仓库<br>vercel关联github账号注册，创建一个新hexo部署工程关联上述仓库<br>本地安装vscode和hexo，新建博客文件夹<br>依次初始化hexo和git仓库在博客文件夹<br>使用git推送本地至github<br>vercel管理自己的域名<br>使用域名访问博客网站</p>
</blockquote>

  <div class="note-large blue">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <p>细节提示</p>

    </div>
    <div class="notel-content">
      <p>1、上述步骤可不按顺序进行<br>2、由于vercle域名污染原因，绑定自己的域名是必要的<br>3、可选用其他部署工具替代vercel，同理，github也可用其他仓库代替</p>

    </div>
  </div>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在我看来，搭建个人博客总不是必须的，除非你有足够的时间和精力来多了解很多必要的知识。或者你认为这能帮你解决很多问题，当然，开心最好。</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>vercel</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>About Dotfiles</title>
    <url>/2024/10/29/dotfiles/</url>
    <content><![CDATA[
  <div class="note p-4 mb-4 rounded-small yellow">
    <p>等待完成…</p>

  </div>

<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>dotfile</tag>
      </tags>
  </entry>
  <entry>
    <title>想做的事和生活</title>
    <url>/2024/10/24/dream-life/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>生活的最佳状态是冷冷清清的风风火火。–木心</p>
<p>人生是一个很漫长的过程。(至少我是这么认为的) 想要在自己精力旺盛的时候实现一些自己感兴趣，或者说一直存在于心中的执念的想法看起来总是疯狂的。但是，不实现这些，人生又有什么意义？看过cheems的二创视频，是关于人生的，主题大致如下：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/dream-life/shutiao.png"
                      alt="去码头整点薯条？"
                ></p>
<p>很不幸的是，一度被广泛二创的cheems最终也敌不过命运：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/dream-life/cheems-angle.jpg"
                      alt="cheems天使"
                ></p>
<p>人生就是这样。所以，为了减少接下来我人生中的时间的浪费，同时记录一些人生中的难忘时刻，我打算在这里留下一篇随想。</p>
<p>谨以此篇纪念我的童年，那是一段小有遗憾的幸福时光。</p>
<h2 id="dream"><a href="#dream" class="headerlink" title="dream"></a>dream</h2><p>出身平凡，努力成为一个软件工程师，独立开发者。</p>
<p>学习计划：</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> lua</li>
<li><input checked="" disabled="" type="checkbox"> shell</li>
<li><input checked="" disabled="" type="checkbox"> python</li>
<li><input checked="" disabled="" type="checkbox"> c++&#x2F;c</li>
<li><input checked="" disabled="" type="checkbox"> linux</li>
<li><input disabled="" type="checkbox"> docker</li>
</ul>

  <div class="note p-4 mb-4 rounded-small info green">
    <p>持续更新中…</p>

  </div>

<h2 id="life"><a href="#life" class="headerlink" title="life"></a>life</h2>]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>dream</tag>
        <tag>life</tag>
        <tag>plan</tag>
      </tags>
  </entry>
  <entry>
    <title>git配置与使用</title>
    <url>/2024/10/19/git-config/</url>
    <content><![CDATA[<h2 id="下载并安装git"><a href="#下载并安装git" class="headerlink" title="下载并安装git"></a>下载并安装git</h2><p>前往<a class="link"   href="https://git-scm.com/" >Git官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>点击下载进入下载页面，根据自己的操作系统下载安装即可。</p>
<p><strong>使用如下command查看是否成功安装git:</strong></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git --version[-v]</span><br></pre></td></tr></table></figure></div>

<h2 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h2>
  <div class="note p-4 mb-4 rounded-small info">
    <p>提示: 以下假设在设备上成功下载安装git,并配置好了相关环境变量。</p>

  </div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置用户和邮箱</span></span><br><span class="line">git config --global user.name &#x27;&lt;username&gt;&#x27;</span><br><span class="line">git config --global user.email &#x27;&lt;useremail&gt;&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span> </span><br></pre></td></tr></table></figure></div>
<p>至此基本就配置完成，其余的问题可根据实际问题进行特定配置，具体查阅<a class="link"   href="https://git-scm.com/docs/git-config" >git-config-doc <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="配置github"><a href="#配置github" class="headerlink" title="配置github"></a>配置github</h2><p>github主要使用2种方式进行仓库链接本地:</p>
<blockquote>
<p>https: 需要github账号密码验证,手动验证,不常用<br>ssh: ssh验证,自动验证，常用</p>
</blockquote>

  <div class="note p-4 mb-4 rounded-small info">
    <p>这里只介绍ssh配置,https配置可自行查阅github-doc</p>

  </div>

<h3 id="大致流程"><a href="#大致流程" class="headerlink" title="大致流程"></a>大致流程</h3><blockquote>
<p>注册并登陆github<br>找到设置中关于ssh验证的栏目<br>添加ssh公钥<br>完成ssh配置</p>
</blockquote>
<h3 id="具体细节"><a href="#具体细节" class="headerlink" title="具体细节"></a>具体细节</h3>
  <div class="note p-4 mb-4 rounded-small warning">
    <p>配置时所用的OS为linux,如为其它OS,查阅相关教程与文档。</p>

  </div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开启sshd</span></span><br><span class="line">sudo systemctl start sshd.service</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开启ssh-agent</span></span><br><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成密钥和公钥</span></span><br><span class="line">ssh -t [algorithm] -b [key-length] -C &quot;&lt;user-email&gt;&quot; -f [output-file-name]</span><br><span class="line">eg: ssh -t rsa -b 4096 -C &#x27;&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入~/.ssh查看公钥与密钥，id_[algorithm]为密钥 id_[algorithm].pub为公钥</span></span><br><span class="line">cd ~/.ssh</span><br><span class="line">ls -al</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加密钥到ssh-agent</span></span><br><span class="line">ssh-add id_[algorithm]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加公钥到github,复制下面的输出内容到github的添加ssh-key内</span></span><br><span class="line">cd ~/.ssh</span><br><span class="line">car ./id_[algorithm].pub</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">访问github连接</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></div>

<h2 id="常用Command"><a href="#常用Command" class="headerlink" title="常用Command"></a>常用Command</h2>
  <div class="note p-4 mb-4 rounded-small green icon-padding">
    <i class="note-icon fa-solid fa-circle-up"></i><p>此部分持续更新中…</p>

  </div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加代码</span></span><br><span class="line">git add &lt;file-name&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加状态</span></span><br><span class="line">git status</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交到本地存储库</span></span><br><span class="line">git commit -m &#x27;commit-msg&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">推送代码到远程存储库</span></span><br><span class="line">git push local-branch remote-branch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取代阿</span></span><br><span class="line">git pull local-branch remote-branch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加远程仓库</span></span><br><span class="line">git remote add local-branch ssh-link</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看本地分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看本地远程仓库</span></span><br><span class="line">git remote -v </span><br></pre></td></tr></table></figure></div>

<p><strong>关于命令的详细使用:</strong></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">git &lt;command&gt; --help</span><br></pre></td></tr></table></figure></div>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>git是一个版本控制工具，主要用于针对我们的工程代码进行管理。很多用法和教程在git官方网站都有给出。</p>
<p><strong>此文章主要用于记录git的一些主要使用，以便将来温习查阅。</strong></p>
<h2 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h2><blockquote>
<p><a class="link"   href="https://git-scm.com/" >git官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://github.com/" >github官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://git-scm.com/docs" >git-doc <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://docs.github.com/en" >github-doc <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>git</tag>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux篇-启动项配置</title>
    <url>/2024/10/29/linux-boot-config/</url>
    <content><![CDATA[<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><p>After installing linux, we need to boot it. With any luck, you will get a brand new operating system that you can get right into and use. But it seems that we are not always the luckiest ones. Maybe what awaits us is a device with a black screen, and that doesn’t seem to be what we want. So we need to avoid this, and under linux, a boot loader is always a must.</p>
<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="Check-Firmware-Types"><a href="#Check-Firmware-Types" class="headerlink" title="Check Firmware Types"></a>Check Firmware Types</h3><p>Firmware may sound confusing, and it’s not. In short, the following two firmware systems are commonly used in modern computers:</p>
<blockquote>
<p>BIOS:Basic Input-Output System(has been replaced progressively since 2010 by the UEFI)</p>
<p>UEFI:Unified Extensible Firmware Interface</p>
</blockquote>
<h3 id="System-Initialization"><a href="#System-Initialization" class="headerlink" title="System Initialization"></a>System Initialization</h3><p>The system turns on, performs a power-up self-test, and initializes the necessary hardware devices. After this, the base firmware scans the corresponding disk partition and finds the corresponding add-in, then starts the bootloader, after which the bootloader loads the kernel and the system using specific parameters.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/linux/boot-config/bootprocess.png"
                      alt="boot-process"
                ></p>
<h3 id="Boot-Loader"><a href="#Boot-Loader" class="headerlink" title="Boot Loader"></a>Boot Loader</h3><p>The boot loader is the first software loaded by the computer firmware and is responsible for loading the kernel using specific kernel parameters and initializing the RAM disks according to the configuration file.</p>
<p><strong>some boot loader(from arch wiki)</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/linux/boot-config/bootloader.png"
                      alt="bootloaders"
                ></p>
<p>Here we can find a number of bootloaders to choose from, and the applicable characteristics of common bootloaders are also provided here, here we are going to use <strong>grub</strong> as it has the most powerful characteristics and is also one of the most popular bootloader programs.</p>
<h3 id="Grub"><a href="#Grub" class="headerlink" title="Grub"></a>Grub</h3><h4 id="Download-and-Install"><a href="#Download-and-Install" class="headerlink" title="Download and Install"></a>Download and Install</h4><p>tips:That’s always necessary: if you’re using an installation media-booted system installation, such as a USB flash drive or other removable media, run <code>grub-install</code> after the system has been successfully installed.If you need to install grub outside of a successful installation for some other reason, you’ll need to run the option <code>--boot-directory=/boot</code> to mount grub to the specified partition.</p>
<p>Installation Procedure：</p>
<blockquote>
<p>1、Mount the EFI partition</p>
<p>2、Select a bootloader logo,like<code>GRUB</code>.This will map to the esp&#x2F;EFI&#x2F;GRUB directory and be used to distinguish between different efi files</p>
<p>3、Execute the following commands to install the GRUB EFI application grubx64.efi into esp&#x2F;EFI&#x2F;GRUB&#x2F; and install its modules into &#x2F;boot&#x2F;grub&#x2F;x86_64-efi,just like:<br>grub-install –targrt&#x3D;x86_64-efi –efi-directory&#x3D;esp –bootloader-id&#x3D;GRUB</p>
</blockquote>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">I<span class="string">&#x27;m using grub on arch,</span></span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">if you&#x27;</span>re using other distributions,</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">looking <span class="keyword">for</span> specific downloads is necessary!</span></span><br><span class="line">sudo pacman -S grub efibootmgr</span><br><span class="line">grub-install --target=i386-pc /dev/sdX(Installed disks, not partitions)</span><br></pre></td></tr></table></figure></div>

<h4 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h4><p>The grub configuration file is located in <code>/etc/default/grub</code>, and you need to regenerate the new main configuration file after each modification.</p>
<p><strong>Generate master configuration file</strong><br>Main Configuration File Directory:<code>/boot/grub/grub.cfg</code></p>
<p>Using the tool <code>grub-mkconfig</code> to generate the master configuration file:</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure></div>

<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p><strong>The boot loader is a very important tool in operating system bootstrapping. It has a direct impact on whether or not the operating system kernel can be boot loaded properly. Of course, for those who have higher needs, using a boot loader to load kernel-specific parameters is also and its important. It is necessary to take a little time to learn more about the advanced features related to grub, as well as some other boot loaders.</strong></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a class="link"   href="https://wiki.archlinux.org/title/Arch_boot_process#Boot_loader" >Arch Boot Process <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://wiki.archlinux.org/title/GRUB" >Grub from arch <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux篇-网络配置</title>
    <url>/2024/10/29/linux-network-config/</url>
    <content><![CDATA[
  <div class="note p-4 mb-4 rounded-small yellow">
    <p>等待完成…</p>

  </div>

<h2 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h2><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>network</tag>
      </tags>
  </entry>
</search>
